/**
 * @typedef {Object} ReduxStore
 * @property {ReduxStore.Authentication} authentication
 * @property {ReduxStore.Document}       document
 * @property {ReduxStore.Timeline}       timeline
 */

/**
 * @namespace StoreAction
 */

/**
 * @typedef {Object} ReduxStore.Authentication
 * @property {ReduxStore.Authentication.oauth}  oauth
 * @property {Object}  profile
 * @property {boolean} signedIn
 * @property {string}  status
 * @property {Object}  user
 */

/**
 * @typedef {Object} ReduxStore.Authentication.oauth
 * @property {string} access_token
 */

/**
 * @typedef {Object} ReduxStore.Document
 * @property {string} name
 * @property {string} fileId
 */

/**
 * @typedef {Object} ReduxStore.Timeline
 * @property {Object.<ReduxStore.Timeline.Event>} events
 * @property {ReduxStore.Timeline.Marker[]}       markers
 * @property {boolean}                            saved
 */

/**
 * @typedef {Object} ReduxStore.Timeline.Marker
 * @property {string[]} events - List of UUID of all event in the marker
 * @property {string}   label  - Label of the time marker
 * @property {string}   uuid   - UUID of the marker
 */

/**
 * @typedef {Object} ReduxStore.Timeline.Event
 * @memberOf Store
 * @property {string} label
 * @property {string} description
 * @property {string} marker      - UUID of the marker to which the event belongs
 * @property {string} uuid        - UUID of the event
 */

/**
 * @typedef {Object} StoreAction.Timeline.AddEvent
 * @property {string} description - Description of the event
 * @property {string} label       - Label of the event
 * @property {string} marker      - UUID of the marker to which the event will be added
 * @property {number} position    - Position where to create the event.
 * @property {string} uuid
 */

/**
 * @typedef {Object} StoreAction.Timeline.AddMarker
 * @property {string} label
 * @property {number} position - Position of the marker
 * @property {string} uuid
 */

/**
 * @typedef {Object} StoreAction.Timeline.RemoveMarker
 * @property {string} uuid - UUID of the marker to remove
 */

/**
 * @typedef {Object} StoreAction.Timeline.MoveMarker
 * @property {number} position - New position of the marker
 * @property {string} uuid     - UUID of the marker to move
 */

/**
 * @typedef {Object} StoreAction.Timeline.RenameMarker
 * @property {string} label - New label
 * @property {string} uuid  - UUID of the marker to rename
 */

/**
 * @typedef {Object} StoreAction.Timeline.RemoveEvent
 * @property {string} uuid       - UUID of the event to remove
 */

/**
 * @typedef {Object} StoreAction.Timeline.MoveEvent
 * @property {string} marker   - Marker when the event has been moved
 * @property {string} event    - UUID of the event to move
 * @property {string} position - Position in the marker event list of the event
 */

/**
 * @typedef {Object} StoreAction.Timeline.UpdateEventDescription
 * @property {string} description - New description of the event
 * @property {string} markerUUID - UUID of the marker
 * @property {string} uuid       - UUID of the event to rename
 */

/**
 * @typedef {Object} StoreAction.Timeline.UpdateEventLabel
 * @property {string} label      - New label of the event
 * @property {string} markerUUID  - UUID of the marker
 * @property {string} uuid        - UUID of the event to rename
 */
